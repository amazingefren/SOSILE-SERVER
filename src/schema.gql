# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PostCount {
  likes: Float!
  comments: Float!
}

type CommentCount {
  likes: Float!
}

type Post {
  id: Float!
  author: User
  content: String!
  date: DateTime!
  updated: DateTime!
  history: [PostHistory!]!
  likes: [User!]
  comments: [Post!]
  parents: [Post!]
  _count: PostCount
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Comment {
  id: Float!
  content: String!
  date: DateTime!
  likes: [User!]
  author: User
  post: Post
  _count: CommentCount
}

type PostHistory {
  id: Float
  content: String
  date: DateTime
  parent: Post
}

type UserProfile {
  id: Int!
  biography: String!
  userId: Float!
}

type User {
  id: Int!
  username: String!
  email: String!
  profile: UserProfile
  posts: [Post!]
  comments: [Comment!]
  postLikes: [Post!]
  commentLikes: [Comment!]
  following: [User!]
  followers: [User!]
}

type AuthUser {
  id: Int!
  username: String!
  email: String!
  profile: UserProfile
  posts: [Post!]
  comments: [Comment!]
  postLikes: [Post!]
  commentLikes: [Comment!]
  following: [User!]
  followers: [User!]
  role: String
  token: String
}

type Query {
  debugUsers: [User!]!
  user(include: UserIncludeOpts, where: UserUniqueInput!): User
  whoAmI(include: UserIncludeOpts): User!
  userUnfollow(user: Float!): User!
  debugPosts: [Post!]!
  userPosts(include: PostIncludeOpts, user: Float): [Post!]
  AuthCheck: Boolean!
}

input UserIncludeOpts {
  followers: Boolean = false
  following: Boolean = false
  postLikes: Boolean = false
  commentLikes: Boolean = false
  posts: Boolean = false
  profile: Boolean = false
  comments: Boolean = false
}

input UserUniqueInput {
  id: Float
  username: String
  email: String
}

input PostIncludeOpts {
  author: Boolean = false
  history: Boolean = false
  likes: Boolean = false
  comments: Boolean = false
}

type Mutation {
  userFollow(user: Float!): User!
  createPost(data: CreatePostInput!): Post!
  updatePost(postId: Float!, data: CreatePostInput!): Post!
  deletePost(postId: Float!): Boolean!
  postLikeToggle(postId: Float!): Boolean!
  postCreateReply(postId: Float!, data: CreatePostInput!): Post!
  AuthRegisterUser(data: AuthRegisterUserInput!): User!
  AuthLoginUser(data: AuthLoginUserInput!): AuthUser!
  AuthRefresh: Boolean!
  AuthLogout: Boolean!
}

input CreatePostInput {
  content: String!
}

input AuthRegisterUserInput {
  email: String!
  username: String!
  password: String!
}

input AuthLoginUserInput {
  username: String!
  password: String!
}
